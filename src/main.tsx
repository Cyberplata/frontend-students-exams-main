import axios from "axios"
import { createRoot } from "react-dom/client"
import { useEffect, useState } from "react"

// Types
type Comment = {
  postId: string
  id: string
  name: string
  email: string
  body: string
}

// Api
const instance = axios.create({ baseURL: "https://exams-frontend.kimitsu.it-incubator.io/api/" })

const commentsAPI = {
  getComments() {
    return instance.get<Comment[]>("comments")
  },
  createComment() {
    const payload = {
      body: "–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ –∑–∞–≥–ª—É—à–∫–∞. Backend —Å–∞–º —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ –≤–µ—Ä–Ω–µ—Ç –µ–≥–æ –≤–∞–º",
    }
    // Promise.resolve() —Å—Ç–æ–∏—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–∞–≥–ª—É—à–∫–∏, —á—Ç–æ–±—ã TS –Ω–µ —Ä—É–≥–∞–ª—Å—è –∏ –∫–æ–¥ –∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–ª—Å—è
    // Promise.resolve() –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    return instance.post<Comment>("comments", payload)
  },
}

// App
export const App = () => {
  const [comments, setComments] = useState<Comment[]>([])

  useEffect(() => {
    commentsAPI.getComments().then((res) => {
      setComments(res.data)
    })
  }, [])

  const createPostHandler = () => {
    commentsAPI.createComment().then((res: any) => {
      const newComment = res.data
      setComments([newComment, ...comments])
    })
  }

  return (
    <>
      <h1>üìù –°–ø–∏—Å–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤</h1>
      <div style={{ marginBottom: "15px" }}>
        <button style={{ marginLeft: "15px" }} onClick={() => createPostHandler()}>
          –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        </button>
      </div>

      {comments.map((c) => {
        return (
          <div key={c.id}>
            <b>Comment</b>: {c.body}{" "}
          </div>
        )
      })}
    </>
  )
}

createRoot(document.getElementById("root")!).render(<App />)

// üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// –ù–∞–ø–∏—à–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è.
// –¢–∏–ø–∏–∑–∞—Ü–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –º–æ–∂–Ω–æ –∏ —É–∫–∞–∑–∞—Ç—å (–≤ –æ—Ç–≤–µ—Ç–∞—Ö —É—á—Ç–µ–Ω—ã –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞).
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å—Ç—Ä–æ–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞.

// return instance.post<Comment>("comments", payload)